<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Eric Finster's Blog]]></title>
  <link href="http://ericfinster.github.io/atom.xml" rel="self"/>
  <link href="http://ericfinster.github.io/"/>
  <updated>2015-02-21T21:46:49-08:00</updated>
  <id>http://ericfinster.github.io/</id>
  <author>
    <name><![CDATA[Eric Finster]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Higher Dimensional Trees I - Basics]]></title>
    <link href="http://ericfinster.github.io/blog/2015/02/21/higher-dimensional-trees-i-basics/"/>
    <updated>2015-02-21T16:21:58-08:00</updated>
    <id>http://ericfinster.github.io/blog/2015/02/21/higher-dimensional-trees-i-basics</id>
    <content type="html"><![CDATA[<p>In this first series of posts, I’m going to show you how to find some
simple, elegant geometic concepts lurking right at the heart of
functional programming.  We’re going to go back to basics, revisiting
our old friends lists and trees, in order to see how these canonical
datatypes extend naturally into higher dimensions.</p>

<p>I’m going to use 
<a href="http://wiki.portal.chalmers.se/agda/pmwiki.php">Agda</a> style notation
to illustrate these ideas, but I think what I say should be clear
enough to anyone with some functional programming experience. 
Everything here is relatively easy to translate into any other 
modern functional language like Scala, OCaml or Haskell.</p>

<p>So, let’s start with a basic definition of a list. Notice I am not
taking advantage of infix notational sugaring here, and simply using
the standard nil/cons approach.  The reason will become clear
shortly.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="agda"><span class="line">  <span class="kr">data</span> List <span class="o">(</span>A <span class="ow">:</span> <span class="kt">Set</span><span class="o">)</span> <span class="ow">:</span> <span class="kt">Set</span> <span class="kr">where</span>
</span><span class="line">    <span class="nf">nil</span>  <span class="ow">:</span>              List A
</span><span class="line">    <span class="nf">cons</span> <span class="ow">:</span> A <span class="ow">→</span> List A <span class="ow">→</span> List A
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Now let’s take a sample term here, and try to give it a nice
geometric interpretation.  Here is my term:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="agda"><span class="line">  <span class="nf">list</span> <span class="ow">:</span> List ℕ
</span><span class="line">  list <span class="ow">=</span> cons <span class="mi">3</span> <span class="o">(</span>cons <span class="mi">1</span> <span class="o">(</span>cons <span class="mi">2</span> nil<span class="o">))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>To be continued …</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Front Matter]]></title>
    <link href="http://ericfinster.github.io/blog/2015/02/21/front-matter/"/>
    <updated>2015-02-21T15:23:40-08:00</updated>
    <id>http://ericfinster.github.io/blog/2015/02/21/front-matter</id>
    <content type="html"><![CDATA[<p>We start with a confession: I think I have probably written this kind
of introductory message for a nascent blog about eight times.  None of
those ill-fated attempts still survives to my knowledge, but to be 
honest, I haven’t checked.  And it seems likely that Google could prove
me wrong on that point.  Please don’t go looking ….</p>

<p>In any case, it does seem appropriate to put at least <em>something</em> here
at the beginning so that things don’t just start coming out of left
field.  And anyway, you should know what you’re getting yourself into
by sticking around.  So with that, here we go again …</p>

<p>My name is Eric Finster.  I am a mathematician by training, and the
real reason I’m starting this blog is to talk about mathematics.
Specifically, I am interested in homotopy theory, higher category
theory, and the relations between these subjects and logic and
computer science.  That’s mainly the kind of thing you are likely
to find here, at least in the beginning.</p>

]]></content>
  </entry>
  
</feed>
